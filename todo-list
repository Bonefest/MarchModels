1. CVar system
2. Global configurations system
3. Dynamic resolution for image integrator
4. Label at the bottom "FPS, frame took x ms"
5. Output compile log into a dedicated window
6. Add list of built-in arguments in script function settings window
7. Fix forking problem
8. Recalculate geometry when its relative position in parent's branch has changed (aabb should not be recalculated)
9. Add turn on/turn off button, probably only for 2+ geometries in the branch or union-only
10. We should not be able to change script function type if it's used by some geometry or geometry should additionally recheck and update its scripts (e.g move sdf to odfs list or vice versa)
11. add time to logger's messages
12. instance and prototype should be two different windows
13. sync function for script function settings
14. two camera control modes: FPS-like, righ-click-like; ability to rotate selected geometry with right-click-like mode and move with pressed left button
15. clear log history button
16. ability to change center of mass
17. text input for time
18. visualize three types of AABBs (native, dynamic, final)
19. manual AABB setup
20. check native aabb size, decide whether it's bounded
21. config settings manager (window with cvars)
22. check in rasterization pass if intersection was found on the previous iteration and skip in positive case
23. ODFs of the leaf additionally may get access to the float3 point value.
24. ability to swtich to "smooth" combination functions
25. ability to incorporate custom combination function (final AABB calculation should be adapted in this case, since we have a risk of losing conservativeness of the AABB)
26. We incorrectly calculate values in z buffer, what we should really store is z value, not distance (hence, we should find a point in world space, project it in the NDC and store that value instead)
27. add rendererGetPass(name) function - bools like "enable normals" may be obsolete, because we can control the passes directly. Gives us more flexibilty: allows to add parameters to the passes and control them from the editor.
28. add renderPassDrawInputView() - allows to incapsulate input view
29. double click on a geometry, will change camera's position to center view on the geometry
30. wind function / parameter
31. add additional check if traversed distance > some threshold (and e.g modify stencil mask)
32. instead of discarding rays that haven't intersected a surface, consider them as intersected, in case if minimal distance to the surface was smaller than some threshold2
33. chance to fix camera's frustum (disable recalculations)
34. visualization of a frustum
35. statistics of culled objects
36. We can easily render plane as two triangles (in case if we don't need ray marching features and simply need render sort of a ground)
37. before rasterizing a leaf, project its AABB on the screen (in case it's bounded or based on some heuristic, e.g volume size < some value)
38. split rasterization pass up: rasterization preparation and extraction steps are decorators. Rasterization pass can also be applied to the shadowing pass (shadowing pass only prepares rays and extracts results in some other way and provides some other point of view)
39. store all geotransforms in a single UBO
40. set blending settings only at the beginning of the rasterization, set framebuffer only at the beginning of the rasterization
41. add some clue to the view, to understand what's camera orientation
42. selected objects's AABB should have blue color
43. when geometry is selected, input operations in a view window are applied to the selected geometry.
44. PCF compilation check is not full; PCF's script function type cannot be changed
45. extend assets manager
46. compilation of pcf always fails
47. drag-n-drop for geometry
48. thanks to the id buffer, we can easily track user clicks. When mouse isn't released, move/rotate object in corresponding direction.
49. visualize distance attenuation
50. calcualte stack id only once in shaders
51. investigate problem of ringing during normals visualization. Temp fix: decrease intersection threshold
52. billboard rendering
53. texture/buffer wrapper which is freed when sptr counter is 0
54. selected light's billboard should be somehow highlighted
55. lights with enabled shadow should have an additional mark on its billboard
56. local normalized offset in billboard system API, e.g 0.5, 0.5 shift half width + half height
57. generate lights frustums during shadow rasterization
58. rename shadow factor to shadow softness factor
59. square att factor creates banding
60. visualize light source's direction
61. discard fragments with 0s id during shadows generation
62. add two paths to geometry rasterization: NORMAL_PASS and SHADOW_PASS, both passes will be pregenerated. SHADOW_PASS additionally uses depthmap for generating correct ray origin.
63. ambient color shouldn't affect background
64. do not show pcfs for leafs
65. add ability to disable scene elements
66. disabling light disabled all other lights too (probably we need to add an id to the button)
67. possibly shaders are recreated too often (shaderid after some time is too big)
68. shader program ptr
69. if aabb is disabled - sometimes lags are hapening
70. fog setup for simple/pbr shading
71. fast switch between "position mode" (only aabbs are shown) and "drawing mode"
72. render on top of an AABB an orientation of the object
73. sky pass
74. render axes for selected lights too
75. render grid
76. scene serialization